URL_IDCAMP_API="http://localhost:8080/api"
IDCAMP_SESSION=""
IDCAMP_USER=""
IDCAMP_PASS=""

# IDCAMP_USER and IDCAMP_PASS are set from env.local
if [ -f ~/dotfiles/env.local ]; then
    . ~/dotfiles/env.local
fi

if [ -f ~/dotfiles/functions ]; then
    . ~/dotfiles/functions
fi


# Create session if currently there is currently not existing one
function idcamp_create_session {

  while :; do
    case "$1" in
      -f|--force)
        printf "Forcing creation of new session\n"
        idcamp_delete /sessions
        IDCAMP_SESSION=""
        break;
        ;;
      --)
        shift
        break
        ;;
      *)
        break
    esac
    shift
  done

  if [[ -z "$IDCAMP_SESSION" ]]; then
    printf "Creating session to IDCAMP on $URL_IDCAMP_API\n"
    local session_resp=$( idcamp_post_pub /sessions "{\"username\":\"$IDCAMP_USER\",\"password\":\"$IDCAMP_PASS\"}" )
    IDCAMP_SESSION=$( echo "$session_resp" | sed -nE 's/.*"sessionId":"(.*)","userId.*/\1/p' )
    printf "Session created $IDCAMP_SESSION\n"
  else
    printf "Working with currently established session $IDCAMP_SESSION\n"
  fi
}

# Make GET requests that require session
function idcamp_get {
  local url="$URL_IDCAMP_API$1";
  idcamp_create_session
  printf "Querying $url ...\n"
  curl -H "Content-Type: application/json" -H "X-Auth-Token: $IDCAMP_SESSION" "$url" | python -m json.tool
}

# Make public POST calls - no need of session
function idcamp_post_pub {
  local url="$1";
  local json="$2";
  curl -X POST -d"$json" -H "Content-Type: application/json" "$URL_IDCAMP_API/$url"
}

# Make POST requests that require session
function idcamp_post {
  local url="$URL_IDCAMP_API$1";
  local json="$2";
  idcamp_create_session
  printf "Querying $url ...\n"
  curl -X POST -d"$json" -H "Content-Type: application/json" -H "X-Auth-Token: $IDCAMP_SESSION" "$url" | python -m json.tool
}

function idcamp_delete {
  local url="$URL_IDCAMP_API$1"
  curl -X DELETE -H "X-Auth-Token: $IDCAMP_SESSION" "$url"
}

